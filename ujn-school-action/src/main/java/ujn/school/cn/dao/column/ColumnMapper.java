package ujn.school.cn.dao.column;

import java.util.List;
import java.util.Map;

import ujn.school.cn.model.column.Column;
import ujn.school.cn.model.column.ColumnWithBLOBs;

public interface ColumnMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ujn_column
     *
     * @mbg.generated Mon Feb 06 11:15:53 CST 2017
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ujn_column
     *
     * @mbg.generated Mon Feb 06 11:15:53 CST 2017
     */
    int insert(ColumnWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ujn_column
     *
     * @mbg.generated Mon Feb 06 11:15:53 CST 2017
     */
    int insertSelective(ColumnWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ujn_column
     *
     * @mbg.generated Mon Feb 06 11:15:53 CST 2017
     */
    ColumnWithBLOBs selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ujn_column
     *
     * @mbg.generated Mon Feb 06 11:15:53 CST 2017
     */
    int updateByPrimaryKeySelective(ColumnWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ujn_column
     *
     * @mbg.generated Mon Feb 06 11:15:53 CST 2017
     */
    int updateByPrimaryKeyWithBLOBs(ColumnWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ujn_column
     *
     * @mbg.generated Mon Feb 06 11:15:53 CST 2017
     */
    int updateByPrimaryKey(Column record);

	List<Column> queryColumnList(Column column);

	void deleteColumn(int columnId);

	List<Column> queryColumnListByLevel(String level);

	List<Column> queryChildColumnListById(String id);

	List<Column> queryColumnListByIdAndLevel(Map<String, String> map);
}
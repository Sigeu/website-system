<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuanyuansinian.dao.oration.OrationMapper">
  <resultMap id="BaseResultMap" type="com.yuanyuansinian.model.oration.Oration">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 10 10:06:41 CST 2017.
    -->
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="hall" jdbcType="VARCHAR" property="hall" />
    <result column="hall_name" jdbcType="VARCHAR" property="hall_name" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="no_order" jdbcType="INTEGER" property="no_order" />
    <result column="create_date" jdbcType="VARCHAR" property="create_date" />
    <result column="create_user" jdbcType="VARCHAR" property="create_user" />
    <result column="create_user_name" jdbcType="VARCHAR" property="create_user_name" />
    <result column="open_type" jdbcType="VARCHAR" property="open_type" />
    <result column="open_type_name" jdbcType="VARCHAR" property="open_type_name" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yuanyuansinian.model.oration.Oration">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 10 10:06:41 CST 2017.
    -->
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 10 10:06:41 CST 2017.
    -->
    Id, hall, 
    (select name from ujn_hall h where h.id = hall) as hall_name,
    title, keywords, tags, no_order, create_date, create_user, 
    (select real_name from ujn_member m where m.id = create_user) as create_user_name,
    open_type,
    case   
	  when open_type = 0 then '公开'  
	  when open_type = 1 then '不公开'
	  else ''  
	end as open_type_name,
	imgs
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 10 10:06:41 CST 2017.
    -->
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 10 10:06:41 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ujn_oration
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 10 10:06:41 CST 2017.
    -->
    delete from ujn_oration
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yuanyuansinian.model.oration.Oration">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 10 10:06:41 CST 2017.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ujn_oration (hall, title, keywords, 
      tags, no_order, create_date, 
      create_user, open_type, content
      )
    values (#{hall,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{keywords,jdbcType=VARCHAR}, 
      #{tags,jdbcType=VARCHAR}, #{no_order,jdbcType=INTEGER}, #{create_date,jdbcType=VARCHAR}, 
      #{create_user,jdbcType=VARCHAR}, #{open_type,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yuanyuansinian.model.oration.Oration">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 10 10:06:41 CST 2017.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ujn_oration
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hall != null">
        hall,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="keywords != null">
        keywords,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="no_order != null">
        no_order,
      </if>
      <if test="create_date != null">
        create_date,
      </if>
      <if test="create_user != null">
        create_user,
      </if>
      <if test="open_type != null">
        open_type,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hall != null">
        #{hall,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null">
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="no_order != null">
        #{no_order,jdbcType=INTEGER},
      </if>
      <if test="create_date != null">
        #{create_date,jdbcType=VARCHAR},
      </if>
      <if test="create_user != null">
        #{create_user,jdbcType=VARCHAR},
      </if>
      <if test="open_type != null">
        #{open_type,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yuanyuansinian.model.oration.Oration">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 10 10:06:41 CST 2017.
    -->
    update ujn_oration
    <set>
      <if test="hall != null">
        hall = #{hall,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null">
        keywords = #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="no_order != null">
        no_order = #{no_order,jdbcType=INTEGER},
      </if>
      <if test="create_date != null">
        create_date = #{create_date,jdbcType=VARCHAR},
      </if>
      <if test="create_user != null">
        create_user = #{create_user,jdbcType=VARCHAR},
      </if>
      <if test="open_type != null">
        open_type = #{open_type,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yuanyuansinian.model.oration.Oration">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 10 10:06:41 CST 2017.
    -->
    update ujn_oration
    set hall = #{hall,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      keywords = #{keywords,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      no_order = #{no_order,jdbcType=INTEGER},
      create_date = #{create_date,jdbcType=VARCHAR},
      create_user = #{create_user,jdbcType=VARCHAR},
      open_type = #{open_type,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yuanyuansinian.model.oration.Oration">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 10 10:06:41 CST 2017.
    -->
    update ujn_oration
    set hall = #{hall,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      keywords = #{keywords,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      no_order = #{no_order,jdbcType=INTEGER},
      create_date = #{create_date,jdbcType=VARCHAR},
      create_user = #{create_user,jdbcType=VARCHAR},
      open_type = #{open_type,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  
     <!-- 管理员致辞列表 -->
  <select id="queryOrationList" parameterType="com.yuanyuansinian.model.oration.Oration" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ujn_oration
    where 1=1 
   	 <if test="title != null and title != ''">
   		and title like concat('%', #{title,jdbcType=VARCHAR}, '%')
     </if>
     <if test="open_type != null and open_type != ''">
     	and open_type = #{open_type,jdbcType=VARCHAR}
     </if>
    order by id desc
  </select>
  
  <!-- 当前用户致辞列表 -->
  <select id="queryOrationListByMember" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ujn_oration
    where create_user = #{memberId }
    order by id desc
    limit #{limtNum } 
  </select>
  
    <!-- 当前用户致辞列表 -->
  <select id="queryOrationPageListByMember" parameterType="com.yuanyuansinian.model.oration.Oration" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ujn_oration
    where create_user = #{create_user,jdbcType=VARCHAR}
    order by id desc
  </select>
  
   <!-- 首页公开纪念馆列表 -->
  <select id="queryOrationListByOpenType" parameterType="com.yuanyuansinian.model.oration.Oration" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ujn_oration
    where open_type = #{open_type,jdbcType=VARCHAR}
    order by id desc
  </select>
  
  <!-- 纪念馆栏目 最新文章 -->
  <select id="queryOrationNewList" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ujn_oration
    order by unix_timestamp(create_date) desc limit #{countNum}
  </select>
  
  <!-- 封面缩略图 -->
  <update id="uploadImg" parameterType="com.yuanyuansinian.model.oration.Oration">
    update ujn_oration
    set imgs = #{imgs,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <!-- 当前用户当前纪念馆致辞列表 -->
  <select id="queryOrationListByMemberAndHall" parameterType="com.yuanyuansinian.model.oration.Oration" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ujn_oration
    where hall = #{hallId}
    and create_user = #{memberId }
    order by id desc
  </select>
  
  <!-- 当前纪念馆致辞列表 -->
  <select id="queryOrationListByHall" parameterType="com.yuanyuansinian.model.oration.Oration" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ujn_oration
    where hall = #{hallId}
    order by id desc
  </select>
  
  <select id="queryOrationNewListByMember" parameterType="map" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ujn_oration
    where create_user = #{memberId}
		order by unix_timestamp(create_date) desc limit #{limitNum}
  </select>
</mapper>